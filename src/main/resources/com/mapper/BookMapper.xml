<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mapper.BookMapper">
    <!-- 書籍と出版社の1対1の関係 -->
    <resultMap id="BookWithPublisherResult" type="com.entity.Book">
        <id property="id" column="id" />
        <result property="title" column="title" />
        <result property="author" column="author" />
        <association property="publisher" javaType="com.entity.Publisher">
            <id property="id" column="publisher_id" />
            <result property="name" column="publisher_name" />
        </association>
    </resultMap>
    <!-- 書籍とレビューの1対多の関係 -->
    <resultMap id="BookWithReviewsResult" type="com.entity.Book">
        <id property="id" column="id" />
        <result property="title" column="title" />
        <result property="author" column="author" />
        <collection property="reviews" ofType="com.entity.Review">
            <id property="id" column="review_id" />
            <result property="bookId" column="book_id" />
            <result property="reviewText" column="review_text" />
        </collection>
    </resultMap>
    <!-- [SELECT] 全ての書籍を取得するためのSQLを定義 -->
    <select id="getAllBooks" resultMap="BookWithPublisherResult">
        SELECT b.id, b.title, b.author, p.id as publisher_id, p.name as publisher_name FROM books b INNER JOIN publishers p ON b.publisher_id = p.id ORDER BY b.id
    </select>

    <!-- [SELECT] 特定のIDを持つ書籍を取得するためのSQLを定義 -->
    <select id="getBookById" resultMap="BookWithReviewsResult">
        SELECT b.id, b.title, b.publisher_id, r.id as review_id, r.book_id, r.review_text FROM books b INNER JOIN reviews r ON b.id = r.book_id WHERE b.id = #{id}
    </select>

    <!-- [INSERT] 新しい書籍をデータベースに追加するSQLを定義 -->
    <insert id="insertBook" parameterType="com.entity.Book">
        INSERT INTO books (title, author) VALUES (#{title}, #{author})
    </insert>

    <!-- [UPDATE] 特定のIDを持つ書籍の情報を更新するSQLを定義 -->
    <update id="updateBook" parameterType="com.entity.Book">
        UPDATE books SET title = #{title}, author = #{author}
        WHERE id = #{id}
    </update>

    <!-- [DELETE] 特定のIDを持つ書籍の情報を削除するSQLを定義 -->
    <delete id="deleteBookById" parameterType="int">
        DELETE FROM books WHERE id = #{id}
    </delete>
</mapper>